{
  "code": "var TimeLine = Laya.TimeLine;\r\nvar Event = Laya.Event;\r\nexport default class PublicFun {\r\n    constructor() {\r\n        this.timeLine = new TimeLine();\r\n    }\r\n    static getinstance() {\r\n        if (this.instance == null)\r\n            this.instance = new PublicFun();\r\n        return this.instance;\r\n    }\r\n    showAlert(node) {\r\n        let x = Laya.stage.width / 2;\r\n        let y = Laya.stage.height / 2;\r\n        node.visible = true;\r\n        node.active = true;\r\n        node.x = x;\r\n        node.y = y;\r\n        node.scaleX = 0;\r\n        node.scaleY = 0;\r\n        node.pivotX = node.width / 2;\r\n        node.pivotY = node.height / 2;\r\n        this.timeLine = new TimeLine();\r\n        this.timeLine.addLabel(\"turnRight\", 0).to(node, { scaleX: 1.1, scaleY: 1.1 }, 200, null, 0)\r\n            .addLabel(\"turnLeft\", 0).to(node, { scaleX: 1, scaleY: 1 }, 100, null, 0);\r\n        this.timeLine.play(0, false);\r\n        this.timeLine.on(Event.COMPLETE, this, this.onComplete);\r\n        this.timeLine.on(Event.LABEL, this, this.onLabel);\r\n    }\r\n    hideAlert(node) {\r\n        this.timeLine = new TimeLine();\r\n        this.timeLine.addLabel(\"turnRight\", 0).to(node, { scaleX: 1.1, scaleY: 1.1 }, 200, null, 0)\r\n            .addLabel(\"turnDown\", 0).to(node, { scaleX: 0, scaleY: 0 }, 200, null, 0);\r\n        this.timeLine.play(0, false);\r\n        this.timeLine.on(Event.COMPLETE, this, () => {\r\n            node.active = false;\r\n            node.visible = false;\r\n        });\r\n    }\r\n    onComplete() {\r\n        console.log(\"timeLine complete!!!!\");\r\n    }\r\n    onLabel(label) {\r\n        console.log(\"LabelName:\" + label);\r\n    }\r\n}\r\n",
  "references": []
}
