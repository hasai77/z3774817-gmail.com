{
  "code": "var TimeLine = Laya.TimeLine;\r\nvar Event = Laya.Event;\r\nexport default class PublicFun {\r\n    constructor() {\r\n        this.timeLine = new TimeLine();\r\n        this.viewList = [];\r\n    }\r\n    static getinstance() {\r\n        if (this.instance == null)\r\n            this.instance = new PublicFun();\r\n        return this.instance;\r\n    }\r\n    showAlert(node, back) {\r\n        if (!node.getChildByName(\"back_gray\")) {\r\n            let rect = new Laya.Sprite();\r\n            rect.graphics.drawRect(0, 0, Laya.stage.width, Laya.stage.height, \"#333333\");\r\n            rect.name = \"back_gray\";\r\n            rect.zOrder = -9999999;\r\n            rect.alpha = 0.3;\r\n            node.addChild(rect);\r\n        }\r\n        this.viewList.push(node);\r\n        this.startAlert(node);\r\n    }\r\n    startAlert(node) {\r\n        this.setCenter(node);\r\n        let x = Laya.stage.width / 2;\r\n        let y = Laya.stage.height / 2;\r\n        node.visible = true;\r\n        node.active = true;\r\n        node.x = x;\r\n        node.y = y;\r\n        node.scaleX = 0;\r\n        node.scaleY = 0;\r\n        this.timeLine = new TimeLine();\r\n        this.timeLine.addLabel(\"turnRight\", 0).to(node, { scaleX: 1.1, scaleY: 1.1 }, 200, null, 0)\r\n            .addLabel(\"turnLeft\", 0).to(node, { scaleX: 1, scaleY: 1 }, 100, null, 0);\r\n        this.timeLine.play(0, false);\r\n        this.timeLine.on(Event.COMPLETE, this, this.onComplete);\r\n        this.timeLine.on(Event.LABEL, this, this.onLabel);\r\n    }\r\n    hideAlert(node, completeFun) {\r\n        this.timeLine = new TimeLine();\r\n        this.timeLine.addLabel(\"turnRight\", 0).to(node, { scaleX: 1.1, scaleY: 1.1 }, 200, null, 0)\r\n            .addLabel(\"turnDown\", 0).to(node, { scaleX: 0, scaleY: 0 }, 200, null, 0);\r\n        this.timeLine.play(0, false);\r\n        this.timeLine.on(Event.COMPLETE, this, () => {\r\n            node.active = false;\r\n            node.visible = false;\r\n            completeFun && completeFun();\r\n            let view = this.viewList.pop();\r\n            view && view.onHide && view.onHide();\r\n        });\r\n    }\r\n    setCenter(node) {\r\n        let rect = node.getBounds();\r\n        node.pivotX = (rect.width || node.width) / 2;\r\n        node.pivotY = (rect.height || node.height) / 2;\r\n        node.x += node.pivotX;\r\n        node.y += node.pivotY;\r\n    }\r\n    onComplete() {\r\n    }\r\n    onLabel(label) {\r\n    }\r\n    selectionAdmission(node) {\r\n        this.setCenter(node);\r\n        node.x = Laya.stage.width + node.width;\r\n        Laya.Tween.to(node, { x: Laya.stage.width / 2 }, 300);\r\n    }\r\n    getRecvPos(target) {\r\n        let x = Math.random() * (target.width - 20) + 10;\r\n        let y = Math.random() * (target.height - 20) + 10;\r\n        return { x, y };\r\n    }\r\n}\r\n",
  "references": []
}
